version: '3.8'

services:
  postgres-db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./src/main/resources/lib/neondb_dev1-sql_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      args:
        - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  frontend:
    build:
      context: ../nextjs-dashboard
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://app:8080
    volumes:
      - ../nextjs-dashboard/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - NEXT_PUBLIC_API_URL=http://app:8080
    ports:
      - "3000:80"
    networks:
      - my-network
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped

networks:
  my-network:
    driver: bridge